#include<iostream>
#include <locale>
#include <math.h>
#include<conio.h>
#include<ctime>
using namespace std;

void  Mod(int *pDigit);					  // Функція, яка приймає вказівник на змінну і записує в неї модуль самої себе
void  Replace(int* pDigit1, int* pDigit2);//Функція, яка буде приймати два вказівники і міняти їх адресами пам’яті, на які вони вказують.

int main()
{
	setlocale(LC_ALL, "Russian");

	/* Задача 1. Дано три числа. Оголосити вказівники на ці числа.
	Отримати добуток трьох заданих чисел, середнє арифметичне,
	найменше з них, користуючись непрямим доступом до  чисел через вказівники.*/
	/*2. Написати функцію, яка приймає вказівник на змінну і записує в неї модуль самої себе.
	3. Написати функцію, яка буде приймати два вказівники і міняти їх адресами пам’яті, на які вони вказують.
	4. Написати функцію, що приймає три вказівники, при чому значення суми двох перших записуються в третій.
	*/

	int P, Sr, min;
	int a = -5, b = 6, c = 9;
	int *ptra = &a;
	int *ptrb = &b;
	int *ptrc = &c;
	cin >> a;
	cout << "Змiнна а:" << *ptra << "   Адреса  змiнної а:" << ptra << endl;
	cout << "Змiнна b:" << *ptrb << "   Адреса  змiнної b:" << ptrb << endl;
	cout << "Змiнна c:" << *ptrb << "   Адреса  змiнної c:" << ptrc << endl << endl;
	P = *ptra**ptrb**ptrc;
	cout << "Добуток змiнних a,b,c : " << P << endl;
	Sr = (*ptra + *ptrb + *ptrc) / 3;
	cout << "Середнє арифметичне змiнних a,b,c : " << Sr << endl;

	//2. Написати функцію, яка приймає вказівник на змінну і записує в неї модуль самої себе.

	Mod(ptra);
	cout << "Модуль змiнної а : " << *ptra << endl;

	Replace(ptrb, ptrc);
	cout << "Змiнна b:" << *ptrb << "   Адреса  змiнної b:" << ptrb << endl;
	cout << "Змiнна c:" << *ptrb << "   Адреса  змiнної c:" << ptrc << endl << endl;
	
	
	
	
	_getch();
	return 0;
	
}






// Функція, яка приймає вказівник на змінну і записує в неї модуль самої себе
void  Mod(int *pDigit)
{
	*pDigit = abs(*pDigit);
}

// Функцію, яка буде приймати два вказівники і міняти їх адресами пам’яті, на які вони вказують
void  Replace(int* pDigit1, int* pDigit2)
{
	int *temp = pDigit1;
	pDigit1 = pDigit2;
	pDigit2 = temp;
}